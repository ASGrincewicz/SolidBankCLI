        -:    0:Source:C:/Users/Aaron/CLionProjects/SolidBankCLI/cmake-build-debug/_deps/catch2-src/src/catch2/internal/catch_assertion_handler.hpp
        -:    0:Graph:C:\Users\Aaron\CLionProjects\SolidBankCLI\cmake-build-debug\CMakeFiles\SolidBankTests.dir\tests\test_bank.cpp.gcno
        -:    0:Data:C:\Users\Aaron\CLionProjects\SolidBankCLI\cmake-build-debug\CMakeFiles\SolidBankTests.dir\tests\test_bank.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2://              Copyright Catch2 Authors
        -:    3:// Distributed under the Boost Software License, Version 1.0.
        -:    4://   (See accompanying file LICENSE.txt or copy at
        -:    5://        https://www.boost.org/LICENSE_1_0.txt)
        -:    6:
        -:    7:// SPDX-License-Identifier: BSL-1.0
        -:    8:#ifndef CATCH_ASSERTION_HANDLER_HPP_INCLUDED
        -:    9:#define CATCH_ASSERTION_HANDLER_HPP_INCLUDED
        -:   10:
        -:   11:#include <catch2/catch_assertion_info.hpp>
        -:   12:#include <catch2/internal/catch_decomposer.hpp>
        -:   13:#include <catch2/interfaces/catch_interfaces_capture.hpp>
        -:   14:
        -:   15:#include <string>
        -:   16:
        -:   17:namespace Catch {
        -:   18:
        -:   19:    struct AssertionReaction {
        -:   20:        bool shouldDebugBreak = false;
        -:   21:        bool shouldThrow = false;
        -:   22:        bool shouldSkip = false;
        -:   23:    };
        -:   24:
        -:   25:    class AssertionHandler {
        -:   26:        AssertionInfo m_assertionInfo;
        -:   27:        AssertionReaction m_reaction;
        -:   28:        bool m_completed = false;
        -:   29:        IResultCapture& m_resultCapture;
        -:   30:
        -:   31:    public:
        -:   32:        AssertionHandler
        -:   33:            (   StringRef macroName,
        -:   34:                SourceLineInfo const& lineInfo,
        -:   35:                StringRef capturedExpression,
        -:   36:                ResultDisposition::Flags resultDisposition );
function _ZN5Catch16AssertionHandlerD1Ev called 0 returned 0% blocks executed 0%
    #####:   37:        ~AssertionHandler() {
    #####:   38:            if ( !m_completed ) {
    %%%%%:   38-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   39:                m_resultCapture.handleIncomplete( m_assertionInfo );
    %%%%%:   39-block  0
call    0 never executed
        -:   40:            }
    #####:   41:        }
        -:   42:
        -:   43:
        -:   44:        template<typename T>
function _ZN5Catch16AssertionHandler10handleExprIbEEvRKNS_7ExprLhsIT_EE called 0 returned 0% blocks executed 0%
    #####:   45:        void handleExpr( ExprLhs<T> const& expr ) {
    #####:   46:            handleExpr( expr.makeUnaryExpr() );
    %%%%%:   46-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   46-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   46-block  2
call    6 never executed
    $$$$$:   46-block  3
call    7 never executed
    #####:   47:        }
        -:   48:        void handleExpr( ITransientExpression const& expr );
        -:   49:
        -:   50:        void handleMessage(ResultWas::OfType resultType, StringRef message);
        -:   51:
        -:   52:        void handleExceptionThrownAsExpected();
        -:   53:        void handleUnexpectedExceptionNotThrown();
        -:   54:        void handleExceptionNotThrownAsExpected();
        -:   55:        void handleThrowingCallSkipped();
        -:   56:        void handleUnexpectedInflightException();
        -:   57:
        -:   58:        void complete();
        -:   59:
        -:   60:        // query
        -:   61:        auto allowThrows() const -> bool;
        -:   62:    };
        -:   63:
        -:   64:    void handleExceptionMatchExpr( AssertionHandler& handler, std::string const& str );
        -:   65:
        -:   66:} // namespace Catch
        -:   67:
        -:   68:#endif // CATCH_ASSERTION_HANDLER_HPP_INCLUDED
